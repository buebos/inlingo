/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

sourceSets {
    demo {
        java.srcDirs = ['src/demo/java']
        resources.srcDirs = ['src/demo/resources']
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'com.inlingo.Main'
}

test {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events("skipped", "failed")
        exceptionFormat = "full"

        info.events = ["failed", "skipped"]
    }
}

tasks.register('demo', JavaExec) {
    group = 'application'
    description = 'Runs a specified Demo application'

    classpath = sourceSets.demo.runtimeClasspath

    def demoClass = project.findProperty('demoClass') ? 'com.inlingo.' + project.getProperty('demoClass') : 'com.inlingo.MainDemo'
    
    mainClass= demoClass 
}
